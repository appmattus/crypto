/*
 * Copyright 2022 Appmattus Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.appmattus.crypto.internal

import com.appmattus.crypto.Algorithm
import com.appmattus.crypto.Digest
import com.appmattus.crypto.internal.core.sphlib.testKat
import kotlin.test.Test
import kotlin.test.assertNotNull

class HighwayHash256CoreTest : HighwayHash256Test() {

    override fun digest(): Digest<*> = CoreDigest.create(Algorithm.HighwayHash256(key))

    @Test
    fun hasImplementation() {
        assertNotNull(digest())
    }
}

/**
 * Test HighwayHash-256 implementation.
 */
abstract class HighwayHash256Test {

    var key: LongArray = longArrayOf(0, 0, 0, 0)

    abstract fun digest(): Digest<*>

    // From https://github.com/google/highwayhash/blob/master/highwayhash/highwayhash_test.cc
    @Test
    fun testSequence() {
        key = longArrayOf(
            0x0706050403020100L, 0x0F0E0D0C0B0A0908L,
            0x1716151413121110L, 0x1F1E1D1C1B1A1918L
        )

        val data = ByteArray(65) {
            it.toByte()
        }

        val expected = listOf(
            "DD44482AC2C874F5D946017313C7351FB3AEBECCB98714FF41DA233145751DF4",
            "EDB941BCE45F8254E20D44EF3DCAC60F72651B9BCB324A472073624CB275E484",
            "3FDFF9DF24AFE45411C4BF1A1B0AE873115169CC6922597A1208F6590D33B42C",
            "480AA0D70DD1D95C89225E7C6911D1D08EA8426B8BBB865AE23DFBC390E1C722",
            "C9CFC497212BE4DCA85F9DF6AFD2929B1FDA9F211DF4109E07E4277A374D4F9B",
            "B4B4F566A4DC85B3BF4B63BA5E46014215F48E68CDDC1DE30F74587D388085C6",
            "6445C70A86ADB9B4A99CFB2784B4CEB6DAE29D40A0B2DB13B6526DF29A9D1170",
            "D666B1A00987AD81A4F1F838EB8C6D37E9226E07D463E0305754D67D062C526C",
            "F1B905B0ED768BC0E6976FF3FCFF3A454FBE518DD9D09778D9A0AFEB371E0D33",
            "80D8E4D70D3C2981F10FBBD16424F1A1CF5C2DBE9D3F0CD1C0BFE8F701B673F2",
            "ADE48C50E5A262BE8E9492B1FDFE38E00784B74B2FE9B8380E41D574DB656DCD",
            "A1BE77B9531807CFBA97A7DE6A1A9738AF274CEF9C8E261F3E39B935C74CE8E8",
            "15AD3802E34058579D11CBDC39E853A023EA3E993C31B2256CD9E9E3CAF4212E",
            "01C96F5EB1D77C36A367F9C1531F95A61F94A3427CDADCB897F1000ABF3BD5D3",
            "0815E91EEEFF8E410E0C28FA6E21DF5D4EAD8E62ED0953743FFD01DA1C9D73E6",
            "C11905707842602E62C3DB018501B14685F5AD17FA3406C1C884F87BD4FEC347",
            "F51AD989A1B6CD1FF7F075D62A627BD97E01D5F579F28A061AD415C16A174D9F",
            "19F4CFA82CA4068E3B9D4ABD3A9275B98000B0DDE9C010C68884D50949215613",
            "126D6C7F81AB9F5D4EDAA3C5097716EEAF121573A7DD3E499001AC85AA80C32D",
            "06AABEF9149155FADF864F4144E71C3DFDBABCE860BC64DADE2BA54792491CB6",
            "ADFC6B4035079FDBA087B7328E486E6546D1A9935A4623EAE3895C440D3CEE44",
            "B5F9D31DEEA3B3DF8F3024E20A06E133F24C38C8288FE120703F1DCF9BD69749",
            "2B3C0B854794EFE31C5D3F969BDACEA081F16AAFA563AC2E23441C5A79D03075",
            "418AF8C793FD3762BC6B8E9461D7F924776FF26A2A1A9E783AA0B7BFD417CA6E",
            "CD03EA2AD255A3C10185FEE5B59C1B2AD1F438D44F9773E4BE69DD67F83B76E4",
            "F951A8873887A0FB2C7B31D2A548E0AE44803838B6186EFAA3C78EC7BE219F72",
            "958FF151EA0D8C084B7E8997B4F63488C78E074351C5386DD95577556F20EEFA",
            "29A917807FB054063318F884351F578CDD24EA6EF6F6A7FAE74393465E97AEFF",
            "98240880935E6CCB1FD0D271B09F97DA56E786472700B183291649F99F747817",
            "1BD4954F7054C556FFDB2EFF7C596CEB7C6AC69A1BAB6B5B0F037670537FC153",
            "8825E38897597498647CF6EBAF6332C1552BD903DC28C91772D7632C00BFC5AB",
            "6880E276601A644DB3728B20B10FB7DAD0BD12060610D16E8AEF14EF33452EF2",
            "BCE38C9039A1C3FE42D56326A3C11289E35595F764FCAEA9C9B03C6BC9475A99",
            "F60115CBF034A6E56C36EA75BFCE46D03B17C8D3827259907EDAA2ED11007A35",
            "1326E959EDF9DEA2C4776801739F720C5169500FD762F62F8A0DD0D90A2529AB",
            "935149D503D442D4FF6BB41302DAD144339CB012CD9D36ECE61D53619ECC2230",
            "528BC888AA50B696B8AEECA36084E1FCA158151EC024347602C14AAD097CEC44",
            "BED688A72217C3271EE65114F760873F3F5C26B37D3002A6DDF2E895631597B9",
            "E7DB21CF2B0B51ADFAFC6324F4B0AB6CB0857244C22D9C5BF0AD888D1E05849C",
            "05519793CD4DCB003C594A3163067DEBAC75081ACF119E345AC86297805CB094",
            "09228D8C22B5779E19644DB2516B7E842B92C8ABF83141A07F785AD725E19391",
            "59C42E5D46D0A74B5EA53C65CA03606448A9916BB635AEB4BAE6DF143F54E9D4",
            "5EB623696D03D0E3D53D78BCB41DA092FE2348DC52F6B10D64802457632C8C11",
            "43B61BB2C4B85481C6318C25717E80A18C4A7F4D6F9C687DBD0217E035401D7C",
            "7F51CA5743824C37B04C4D5EB11D703A4D511E1ECBF6F369D66775EA215456E2",
            "39B409EEF87E45CC52B8E8C459FC79B344920918D1858C2480F07B645EEE0149",
            "CE8694D1BE9AD514BFA19026526836E71EA4FDF6E4902A7D380C4458D696E1FE",
            "D189E18BF823A0A41F3B353BE501A7D7A24F77B4E02E28847E94646F74F9180C",
            "AFF8C635D325EC482C2E0AA414038D0B4ED37F611A44746739EC38E33B501489",
            "2A2BFDAD5F83F197013D3E6EBEF274CCE1563C0477726155F15A8A5DE932037E",
            "D5D1F91EC812633210110B9BF9B1FF11A175AB26541C603287BADC5728701552",
            "C7B5A92CD8082884DDA62AB61B2EEEFB8F9882ECFEAE732F6B38BD5CC01F4FFB",
            "CF6EF275733D32F0A3F0822DA2BF7D8B304E7435F512406A0B28E3EFEBB3172D",
            "E698F80701B2E9DB66AE2A819A8A882814EA9024C9B8F2C9A7416170523EB5A4",
            "3A917E87E307EDB717B4DEDAE34452C1F689F162E711CC7029CE6BFE789CDD0E",
            "0EFF3AD8CB155D8E47CD9EAD4C0844A246C8E40EE6FE21EBDEF3C25DF0340A51",
            "03FD86E62B82D04D32AB0D600717136D682B0E832B857A89138CE3F1443739B1",
            "2F77C754C4D7F9021053E0A9D9ADBFEA58E66368544AE70AC48A829C72DD83CA",
            "F900EB19E466A09F31BE9E01A8C7D3143AFEC6B8CA08F471B8C0EB0F87FFE7FB",
            "DB277D8FBE3C8EFB53CE6877E11AA57B719C94D20D9A7E7DB345B56392453CC9",
            "37639C3BDBA4F2C96095E7B336466DC83A8049791E65B88A82C988CDE5927CD5",
            "6B1FB1A714234AE420562E255BA6467E3E2B892D40F3D675F40CE3FBE41ED768",
            "8EE11CB1B287C92A8FC2AAEFF63D266D66643487E6EB9F03578AA91DE8D56873",
            "F5B1F8266A3AEB6783B040BE4DEC1ADD7FE1C8635B26FBAEF4A3A447DEFED79F",
            "90D8E6FF6AC124751A422A196EDAC1F29E3765FE1F8EB002C1BDD7C4C351CFBE"
        )

        for (i in 0..64) {
            testKat(
                { digest() },
                data.copyOfRange(0, i),
                expected[i]
            )
        }
    }
}
